ARG BUILD_IMAGE
ARG BASE_IMAGE

# Build the JSS app
FROM $BUILD_IMAGE as kiosk

WORKDIR /kiosk

# JSS CLI
RUN npm install -g @sitecore-jss/sitecore-jss-cli

# Just the package.json first to improve layer cache
COPY fitness/kiosk/package*.json ./

RUN npm install

COPY fitness/kiosk/ ./

# setup to use static values we'll later replace with env vars
# (for values that are baked into the server bundle)
RUN jss setup --layoutServiceHost %layoutServiceHost% --apiKey {EBF6D5C1-EB80-4B15-91AB-DD3845797774} --nonInteractive

RUN jss build



# Build the node-SSR
FROM $BUILD_IMAGE as ssr

WORKDIR /ssr

# Just the package.json first to improve layer cache
COPY fitness/kiosk-node-ssr/package*.json ./

RUN npm install

COPY fitness/kiosk-node-ssr/ ./

COPY scripts/Docker/ ./



# Assemble the final image
FROM $BASE_IMAGE as production

ENV NPM_CONFIG_LOGLEVEL info

COPY --from=kiosk /nodejs /nodejs

USER ContainerAdministrator
RUN setx PATH "%PATH%;C:\nodejs;" /M

WORKDIR /deploy

COPY --from=ssr /ssr ./

COPY --from=kiosk /kiosk/build ./dist/lighthousefitness-kiosk

ENV SITECORE_APP_NAME=lighthousefitness-kiosk
ENV SITECORE_JSS_SERVER_BUNDLE=./dist/${SITECORE_APP_NAME}/server.bundle.js
ENV SITECORE_API_HOST=http://kiosk-cd
ENV PROXY_API_HOST=https://kiosk
ENV SITECORE_API_KEY={EBF6D5C1-EB80-4B15-91AB-DD3845797774}
ENV SITECORE_ENABLE_DEBUG=true
ENV PORT=80

EXPOSE ${PORT}

ENTRYPOINT ["C:\\nodejs\\npm.cmd", "run", "docker"]